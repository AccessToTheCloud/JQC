#!/usr/bin/env bash

# Settings to make sure bash fails and the script exits when anything goes wrong
set -Eeuo pipefail

# DEBUGGING: Uncomment to see all the commands printed to the console
# set -x

# Check correct ENV variables exist
: "$GOOGLE_APP_ENGINE_PROJECT"
: "$GOOGLE_APP_ENGINE_SERVICE"

echo -e "\nRunning unit tests..."
npm install
npm test

echo -e "\nRunning integration and end to end tests..."
bin/rails db:migrate
bin/rails db:test:prepare
rm -f tmp/screenshots/*
RAILS_ENV=test bin/rails assets:precompile
COVERAGE=true bin/rails test:all

echo -e "\nDeploying new staging site..."
RAILS_ENV=production bin/rails db:migrate
RAILS_ENV=production bin/rails assets:precompile
gcloud app deploy --project=$GOOGLE_APP_ENGINE_PROJECT --no-promote --no-cache --quiet

echo -e "\nTesting new staging site..."
latest_deployed_version_id="$(
	gcloud app versions list \
		--sort-by='~VERSION.ID' \
		--limit=1 \
		--project=$GOOGLE_APP_ENGINE_PROJECT \
		--format='value(VERSION.ID)'
)"
latest_deployed_version_url="$(
	gcloud app versions describe $latest_deployed_version_id \
		--service=$GOOGLE_APP_ENGINE_SERVICE \
		--project=$GOOGLE_APP_ENGINE_PROJECT \
		--format='value(versionUrl)'
)"
TEST_HOST="$latest_deployed_version_url" RAILS_ENV="production" ruby production/sign_in_and_check_table_test.rb

echo -e "\n\nDeployment successful.\n"
echo "Visit Google App Engine's version page to migrate traffic to the new version"
echo "See coverage/index.html for code coverage"
